{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","year","Date","getFullYear","className","Helmet","charSet","src","process","alt","href","target","rel","zoom","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAgFeA,MA5Ef,WACE,IAAIC,EAAO,IAAIC,KAEf,OADAD,EAAOA,EAAKE,cAEV,sBAAKC,UAAU,MAAf,UACE,eAACC,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,oEAGF,mCACE,+BAAI,qBAAKC,IAAKC,gCAAwCC,IAAI,mBAAmB,uBAA7E,kBAEA,kJACA,wDAA0B,uBAA1B,6BAAyD,mBAAGC,KAAK,4CAA4CC,OAAO,SAASC,IAAI,aAAxE,uBAAzD,UAGF,cAAC,IAAD,CAAWR,UAAU,gBAAgBG,IAAI,2CAA2CE,IAAI,wCAAwCI,KAAK,MAAMC,MAAM,OAAOC,OAAO,SAG/J,sBAAKX,UAAU,YAAf,UACE,8CAEA,6QAEA,+HAEA,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAWA,UAAU,cAAcG,IAAI,2CAA2CE,IAAI,0CACtF,cAAC,IAAD,CAAWL,UAAU,cAAcG,IAAI,2CAA2CE,IAAI,0CACtF,cAAC,IAAD,CAAWL,UAAU,cAAcG,IAAI,2CAA2CE,IAAI,0CACtF,cAAC,IAAD,CAAWL,UAAU,cAAcG,IAAI,2CAA2CE,IAAI,6CAGxF,+CAEA,0IAA4G,iCAAQ,4CAApH,2FAEA,cAAC,IAAD,CAAWF,IAAI,kCAAkCE,IAAI,0CAErD,mIAIA,+JAAiI,2CAAjI,YAAgK,4CAAhK,eAAmM,yCAAnM,+CAEA,mFAAqD,wCAArD,QAA6E,+CAA7E,4JAAgQ,6CAAhQ,QAA6R,4CAA7R,gEAAiX,8CAAjX,QAA+Y,4CAA/Y,yLAEA,wEAEA,sBAAKL,UAAU,eAAf,UACA,cAAC,IAAD,CAAWA,UAAU,cAAcG,IAAI,2CAA2CE,IAAI,wCAAwCI,KAAK,QACjI,cAAC,IAAD,CAAWT,UAAU,cAAcG,IAAI,2CAA2CE,IAAI,wCAAwCI,KAAK,QACnI,cAAC,IAAD,CAAWT,UAAU,cAAcG,IAAI,2CAA2CE,IAAI,wCAAwCI,KAAK,QACnI,cAAC,IAAD,CAAWT,UAAU,cAAcG,IAAI,2CAA2CE,IAAI,wCAAwCI,KAAK,WAGrI,kEACgD,uBADhD,kJAEiM,uBAFjM,kJAGiM,uBAHjM,kJAIiM,uBAJjM,kJAKiM,uBALjM,eAWF,6DACoB,mBAAGH,KAAK,iCAAiCC,OAAO,SAASC,IAAI,aAA7D,6BADpB,SACkHX,SC7DzGe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ea1a177c.chunk.js","sourcesContent":["import './App.css';\nimport Helmet from \"react-helmet\";\nimport ImageZoom from \"react-image-zooom\";\n\nfunction App() {\n  let year = new Date();\n  year = year.getFullYear();\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>React Image Zoom - Demo Page</title>\n      </Helmet>\n\n      <header>\n        <h1><img src={process.env.PUBLIC_URL + '/logo48.png'} alt=\"ImageZoom logo\" /><br/>&lt;ImageZoom&#x0002F;&gt;</h1>\n\n        <p>Simple React component that will allow users to zoom in on your images, perfect for product images and galleries!</p>\n        <p>Small and light weight!<br/>Give it a try and see the <a href=\"https://github.com/Mario-Duarte/ImageZoom\" target=\"_blank\" rel=\"noreferrer\">docs here</a>.</p>\n      </header>\n\n      <ImageZoom className=\"fullImageZoom\" src=\"https://picsum.photos/seed/000/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" zoom=\"250\" width=\"100%\" height=\"auto\" />\n\n      \n      <div className=\"container\">\n        <h3>How it works</h3>\n\n        <p>This component allows users to click/tap to zoom-in on an image, pan around to inspect the details and click again to zoom-out, moving the focus out of the image will also reset the zoom. This component also has a image loader built in.</p>\n\n        <p>Bellow is an example of a standard image gallery using the component with a default 200% zoom:</p>\n\n        <div className=\"gallery\">\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/005/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" />\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/002/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" />\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/003/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" />\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/004/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" />\n        </div>\n\n        <h3>How to use it</h3>\n\n        <p>The imageZoom component works very similar to the default img tag in HTML, just pass in a src attribute (<strong><i>mandatory</i></strong>) with the image url you wan to use and it will render a working imageZoom component.</p>\n\n        <ImageZoom src=\"https://picsum.photos/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" />\n\n        <code>\n          &lt;ImageZoom src=&quot;https://picsum.photos/1920/1080&quot; alt=&quot;A image to apply the ImageZoom plugin&quot; /&gt;\n        </code>\n\n        <p>By default the component will set a zoom of 200% on the image if no attribute was set, it will also set default values to the <strong>width</strong> (100%), <strong>height</strong> (auto) and <strong>alt</strong> (This is an imageZoom image) attributes.</p>\n\n        <p>You can also pass in secondary attributes such as <strong>id</strong> and <strong>className</strong> to enable you to style the component more easily, in addition to these, the component will also update it's className based on it's state, for example, <strong>loading</strong> and <strong>loaded</strong> for when the component is downloading the image passed, and <strong>fullView</strong> and <strong>zoomed</strong> for when the user zooms in on the image. These can be easily targeted in conjunction with the attribute className to adapt the style of the component depending of implementation.</p>\n\n        <p>Here is an example of a custom gallery:</p>\n\n        <div className=\"demo-gallery\">\n        <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/006/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" zoom=\"300\" />\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/007/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" zoom=\"300\" />\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/008/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" zoom=\"300\" />\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/009/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" zoom=\"300\" />\n        </div>\n\n        <code>\n          &lt;div className=&quot;demo-gallery&quot;&gt;<br/>\n          &nbsp;&lt;ImageZoom className=&quot;gallery-img&quot; src=&quot;https://picsum.photos/seed/006/1920/1080&quot; alt=&quot;A image to apply the ImageZoom plugin&quot; zoom=&quot;300&quot; /&gt;<br/>\n          &nbsp;&lt;ImageZoom className=&quot;gallery-img&quot; src=&quot;https://picsum.photos/seed/007/1920/1080&quot; alt=&quot;A image to apply the ImageZoom plugin&quot; zoom=&quot;300&quot; /&gt;<br/>\n          &nbsp;&lt;ImageZoom className=&quot;gallery-img&quot; src=&quot;https://picsum.photos/seed/008/1920/1080&quot; alt=&quot;A image to apply the ImageZoom plugin&quot; zoom=&quot;300&quot; /&gt;<br/>\n          &nbsp;&lt;ImageZoom className=&quot;gallery-img&quot; src=&quot;https://picsum.photos/seed/009/1920/1080&quot; alt=&quot;A image to apply the ImageZoom plugin&quot; zoom=&quot;300&quot; /&gt;<br/>\n          &lt;/div&gt;\n        </code>\n\n      </div>\n\n      <footer>\n        Created with ♥ by <a href=\"https://www.marioduarte.co.uk/\" target=\"_blank\" rel=\"noreferrer\">Mário Duarte</a> © {year}\n      </footer>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}